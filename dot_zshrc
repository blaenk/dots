# determine path to dots dir

[[ -n "$ENABLE_ZPROF" ]] && zmodload zsh/zprof

if [[ -n "$ENABLE_XTRACE" ]]; then
  zmodload zsh/datetime
  setopt PROMPT_SUBST
  PS4='+$EPOCHREALTIME %N:%i> '

  logfile=$(mktemp zsh_profile.XXXXXXXX)
  echo "Logging to $logfile"
  exec 3>&2 2>$logfile

  setopt XTRACE
fi

command_exists() {
  (( $+commands[$1]))
}

function_exists() {
  (( $+functions[$1]))
}

export DOTSPATH=~/.local/share/chezmoi

eval "$(/opt/homebrew/bin/brew shellenv)"

source $DOTSPATH/zsh/path.zsh

# if TMUX_FZF is set, we're only interested in loading the fzf functions
# everything else will just slow us down
if [[ -n "$TMUX_FZF" ]]; then
  source $DOTSPATH/zsh/fzf.zsh
  return
fi

# zinit
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

fpath=(
  "$HOME/.zsh/comp"
  "$DOTSPATH/zsh/comp"
  "$DOTSPATH/zsh/cache/completions"
  "$ZSH_CACHE_DIR/completions"
  "${fpath[@]}"
)

autoload -U compinit bashcompinit promptinit colors select-word-style
select-word-style bash
compinit -i
bashcompinit
promptinit
colors

# history
export HISTFILE="$HOME/.zsh_history"
export HISTSIZE=10000
export HISTORY_IGNORE=""
export SAVEHIST=$HISTSIZE

setopt inc_append_history
setopt hist_ignore_space
setopt append_history
setopt hist_ignore_dups
setopt share_history
setopt extendedglob
setopt hist_reduce_blanks
setopt hist_verify
setopt no_complete_aliases
setopt auto_pushd
setopt cdable_vars

# env vars
export EDITOR=vim
export VISUAL=vim

source $DOTSPATH/zsh/completions.zsh
source $DOTSPATH/zsh/zle.zsh
source $DOTSPATH/zsh/fzf.zsh

source $DOTSPATH/zsh/functions.zsh
source $DOTSPATH/zsh/alias.zsh
source $DOTSPATH/zsh/highlight.zsh
source $DOTSPATH/zsh/enhancd.zsh

[[ "$OSTYPE" == linux* ]] && source $DOTSPATH/zsh/linux.zsh
[[ "$OSTYPE" == darwin* ]] && source $DOTSPATH/zsh/macos.zsh

# Note that if a plugin is marked with `wait` it will be loaded asynchronously (deferred)
# This means the following is possible:
# - Something you thought you set as the final value gets overwritten by the plugin once it loads
# - A dependency required by subsequent configuration you thought was loaded was not loaded
zinit ice wait silent
zinit light Aloxaf/fzf-tab

zinit ice wait silent
zinit light undg/zsh-nvm-lazy-load

zinit ice wait silent
zinit light hlissner/zsh-autopair

# Can't wait on this one.
zinit light qoomon/zsh-lazyload

zinit ice wait silent
zinit light kutsan/zsh-system-clipboard

zinit ice wait silent as"completion"
zinit snippet 'https://github.com/docker/cli/blob/master/contrib/completion/zsh/_docker'

zinit ice wait silent pick"init.sh"
zinit light b4b4r07/enhancd

# zinit snippet OMZP::docker
zinit ice wait silent
zinit snippet OMZP::command-not-found

DISABLE_FZF_KEY_BINDINGS="true"
zinit snippet OMZP::fzf

zinit ice wait silent
zinit snippet OMZP::chezmoi

zinit ice wait silent
zinit snippet OMZP::kubectl

# lazyload kubectl -- 'source <(kubectl completion zsh)'

export SDKMAN_DIR="$HOME/.sdkman"
lazyload sdk -- 'source "$SDKMAN_DIR/bin/sdkman-init.sh"'

zinit ice wait silent
zinit snippet OMZP::sdk

zinit ice wait silent
zinit light zsh-users/zsh-completions

zinit ice wait silent
zinit light zsh-users/zsh-syntax-highlighting

eval "$(zoxide init --cmd cd zsh)"
eval "$(atuin init zsh --disable-up-arrow)"
eval "$(starship init zsh)"

if [[ -f ~/.zsh.local ]]; then
  source ~/.zsh.local
fi

[[ -n "$ENABLE_ZPROF" ]] && zprof

if [[ -n "$ENABLE_XTRACE" ]]; then
  unsetopt XTRACE
  exec 2>&3 3>&-
fi
