#!/bin/bash

set -e

info () {
  printf "  $(tput setaf 4)Â·$(tput sgr0) $1\n"
}

user () {
  printf "\r  $(tput setaf 5)?$(tput sgr0) $1 "
}

success () {
  printf "\r$(tput el)  $(tput setaf 2)+$(tput sgr0) $1\n"
}

fail () {
  printf "\r$(tput el)  $(tput setaf 1)-$(tput sgr0) $1\n"
  echo ''
  exit
}

link_files () {
  ln -s $1 $2
  success "linked $1 to $2"
}

deploy () {
  echo ''
  info 'sprinkling dotfiles!'
  info "help: "\
"$(tput bold)s$(tput sgr0)kip, "\
"$(tput bold)o$(tput sgr0)verwrite, "\
"$(tput bold)b$(tput sgr0)ackup\n"\
"          capitalize to apply to all remaining\n"

  overwrite_all=false
  backup_all=false
  skip_all=false

  cd ~/.dots

  for source in `find . -maxdepth 2 -name \*.ln`; do
    dest="$HOME/.`basename \"${source%.*}\"`"

    if [ -e $dest ]; then
      overwrite=false
      backup=false
      skip=false
      fname="$(tput bold)`basename $dest`$(tput sgr0)"

      if [ "$overwrite_all" == "false" ] &&\
         [ "$backup_all" == "false" ] &&\
         [ "$skip_all" == "false" ]; then
        if [ ! -L $dest ]; then
          user "$fname exists non-linked:"
        else
          user "$fname is already linked:"
        fi
        read -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac
      fi

      if [ "$overwrite" == "true" ] || [ "$overwrite_all" == "true" ]; then
        rm -rf $dest
        success "removed $fname"
      fi

      if [ "$backup" == "true" ] || [ "$backup_all" == "true" ]; then
        mv $dest $dest\.bak
        success "moved $fname to $fname.bak"
      fi

      if [ "$skip" == "false" ] && [ "$skip_all" == "false" ]; then
        link_files $source $dest
      else
        success "skipped $fname"
      fi

    else
      link_files $source $dest
    fi
  done
}

deploy

