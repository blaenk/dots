# cheatsheet: also just pre ? /
# pre r                -- reload config

# window management
# m-c                  -- create window
# m-h, m-l             -- switch to left, right window
# m-j, m-k             -- move window left, right
# pre &                -- kill window

# panes
# pre -                -- horizontal split
# pre |                -- vertical split
# pre x                -- kill pane

# pre h,j,k,l          -- move to other pane

# pre z                -- toggle zoom a pane

# pre M-up,down,left,right -- resize pane

# join-pane -t :window -- moves current pane to :window
# break-pane           -- makes current pane its own window
# swap-pane

# move window from one session to another:
#   move-window -s srcsess:windowname -t destsess
# if already in windowname
#   move-window -t destsess
# if already in destsess
#   movew -d srcsess:windowname

# to link a window between multiple sessions
#   link-window -d -s srcsess:windowname -t destsess:windowname

# vi binds
setw -g mode-keys vi
set -g status-keys vi

set -g set-clipboard on

setw -g aggressive-resize on

set-option -g history-limit 50000

set -sg escape-time 1     # lower delay
set -g base-index 1       # set the window start index to 1
setw -g pane-base-index 1 # set the pane start index to 1

# easier way of reloading the config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# prefix: this is already default, here for easy changing
set-option -g prefix C-a
bind C-a send-prefix
unbind C-b

if '[ "$USE_SOLARIZED_DARK" ]' 'source $DOTSPATH/tmux/dark.conf' 'source $DOTSPATH/tmux/light.conf'

# prompts
set -g status-interval 1
set -g status-position top
set -g status-justify left
set -g status-style bg=default,none

set -g status-right-length 30
set -g status-right  " #{session_name} #[fg=white,bg=magenta] #[bg=default,none,fg=default,none]"

set -g status-left-length 0
set -g status-left ""

# no spaces in between components
setw -g window-status-separator " "

set -g default-terminal "screen-256color"

# when 1.9 comes out, change to Cs, Cr
set -ag terminal-overrides ',rxvt*:Cs=\E]12;%p1%s\007:Cr=\E]12;6\007'

# TODO: show when it's active with diff color
setw -g window-status-current-style fg=default,bold
setw -g window-status-activity-style bg=default

set -g monitor-activity on
set -g activity-action other
set -g bell-action other

set -g pane-border-style fg=colour6
set -g pane-active-border-style fg=colour6

# Ps = 6 for document, 7 for working directory
# ESC ] Ps ; Pt BEL
# Pt = file: url-encoded URI

set-option -g set-titles on
set-option -g set-titles-string "#S:#W 路 #(tmux display-message -p '#{pane_current_path}' | sed -e \"s@${HOME}@~@\") 路 #{pane_current_command}"

bind -n M-: command-prompt

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

bind -r H swap-pane -s '{left-of}'
bind -r J swap-pane -s '{down-of}'
bind -r K swap-pane -s '{up-of}'
bind -r L swap-pane -s '{right-of}'

set-option -g mouse on

bind-key -r -T prefix M-Up resize-pane -U 1
bind-key -r -T prefix M-Down resize-pane -D 1
bind-key -r -T prefix M-Left resize-pane -L 1
bind-key -r -T prefix M-Right resize-pane -R 1

# go back to the previously used window
bind-key C-l last-window

# switch between windows left/right
bind -n M-h previous-window
bind -n M-l next-window

bind-key = select-layout even-vertical

# switch between sessions
bind -n M-J switch-client -p
bind -n M-K switch-client -n

bind -n M-Up copy-mode\; \
              send-keys -X start-of-line\; \
              send-keys -X search-backward "位"

bind -n M-Down copy-mode\; \
               send-keys -X end-of-line\; \
               send-keys -X search-forward "位"

# move windows left/right
bind -n M-a swap-window -t -
bind -n M-d swap-window -t +

# create window with name
bind -n M-r command-prompt -I "#W" 'rename-window %%'
bind -n M-n command-prompt -p "Name of new window:" 'new-window -a -c "#{pane_current_path}" -n "%%"'

# create new session
bind -n M-R command-prompt "rename-session '%%'"
bind -n M-N command-prompt -p "Name of new session:" 'new-session -c "#{pane_current_path}" -s "%%"'

# jump to any window in any session
# TODO: use zsh --rcs?
# https://unix.stackexchange.com/questions/152738/how-to-split-a-new-window-and-run-a-command-in-this-new-window-using-tmux
bind -n 'M-,' run "TMUX_FZF=1 zsh -ci fzf-tmux-switch-panes"
bind -n 'M-.' run "TMUX_FZF=1 zsh -ci fzf-tmux-bring-pane"

# copy mode
bind -n M-p copy-mode
bind p paste-buffer

bind -Tcopy-mode-vi 'v' send -X begin-selection
bind -Tcopy-mode-vi 'y' send -X copy-selection
bind -Tcopy-mode-vi 'r' send -X rectangle-toggle

bind-key -Tcopy-mode-vi C-k send-keys -X halfpage-up
bind-key -Tcopy-mode-vi C-j send-keys -X halfpage-down

# bind C-p run "tmux set-buffer \"$(xsel -o -b)\"; tmux paste-buffer"
# bind C-y run "tmux save-buffer - | xsel -i -b"

# tmux plugin manager
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @yank_selection_mouse 'clipboard'
set -g @plugin 'tmux-plugins/tmux-yank'

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run -b '~/.tmux/plugins/tpm/tpm'
