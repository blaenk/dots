# cheatsheet: also just pre ? /
# pre r             -- reload config

# window management
# m-c               -- create window
# m-h, m-l          -- switch to left, right window
# m-j, m-k          -- move window left, right
# pre ,             -- rename window
# pre $             -- rename session
# pre &             -- kill window

# panes
# pre -             -- horizontal split
# pre |             -- vertical split
# pre x             -- kill pane

# move window from one session to another:
#   move-window -s srcsess:windowname -t destsess
# if already in windowname
#   move-window -t destsess
# if already in destsess
#   movew -d srcsess:windowname

# to link a window between multiple sessions
#   link-window -d -s srcsess:windowname -t destsess:windowname

# vi binds
setw -g mode-keys vi
set -g status-keys vi

setw -g aggressive-resize on

set-option -g history-limit 50000

set -sg escape-time 1     # lower delay
set -g base-index 1       # set the window start index to 1
setw -g pane-base-index 1 # set the pane start index to 1

# easier way of reloading the config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# prefix: this is already default, here for easy changing
set-option -g prefix C-a
bind C-a send-prefix
unbind C-b

if '[ "$USE_SOLARIZED_DARK" ]' 'source $DOTSPATH/tmux/dark.conf' 'source $DOTSPATH/tmux/light.conf'

# prompts
set -g status-interval 1
set -g status-position top
set -g status-justify left

set -g status-left-length 3
set -g status-left " · "

set -g status-right-length 30
set -g status-right " #[fg=default,underscore,bold]#{session_name}#[fg=default,none] "

# no spaces in between components
setw -g window-status-separator " · "

set -g default-terminal "screen-256color"

# when 1.9 comes out, change to Cs, Cr
set -ag terminal-overrides ',rxvt*:Cs=\E]12;%p1%s\007:Cr=\E]12;6\007'

setw -g window-status-current-style fg=default,bold
setw -g window-status-current-format "#{window_name}"

setw -g window-status-format "#{window_name}"

set -g monitor-activity on
set -g activity-action other
set -g bell-action other
setw -g window-status-activity-style bg=default,underscore

# Ps = 6 for document, 7 for working directory
# ESC ] Ps ; Pt BEL
# Pt = file: url-encoded URI

set-option -g set-titles on
set-option -g set-titles-string "#S:#W · #(tmux display-message -p '#{pane_current_path}' | sed -e \"s@${HOME}@~@\") · #{pane_current_command}"

bind -n M-: command-prompt

bind | split-window -h
bind - split-window -v

bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

set-option -g mouse on

# go back to the previously used window
bind-key C-l last-window

# switch between windows left/right
bind -n M-h previous-window
bind -n M-l next-window

bind-key = select-layout even-vertical

# switch between sessions
bind -n M-J switch-client -p
bind -n M-K switch-client -n

bind -n M-Up copy-mode\; \
              send-keys -X start-of-line\; \
              send-keys -X search-backward "λ"

bind -n M-Down copy-mode\; \
               send-keys -X end-of-line\; \
               send-keys -X search-forward "λ"

# move windows left/right
bind -n M-a swap-window -t -
bind -n M-d swap-window -t +

# create window with name
bind -n M-r command-prompt -I "#W" 'rename-window %%'
bind -n M-n command-prompt -I "#W" -p "Name of new window:" 'new-window -a -c "#{pane_current_path}" -n "%%"'

# create new session
bind -n M-R command-prompt "rename-session '%%'"
bind -n M-N command-prompt -p "Name of new session:" 'new-session -c "#{pane_current_path}" -s "%%"'

# jump to any window in any session
bind -n 'M-,' run "tmux split-window -l 12 'TMUX_FZF=1 zsh -ci fzf-tmux-select-all-window'"

# copy mode
bind -n M-p copy-mode
bind p paste-buffer

bind -Tcopy-mode-vi 'v' send -X begin-selection
bind -Tcopy-mode-vi 'y' send -X copy-selection
bind -Tcopy-mode-vi 'r' send -X rectangle-toggle

bind-key -Tcopy-mode-vi C-k send-keys -X halfpage-up
bind-key -Tcopy-mode-vi C-j send-keys -X halfpage-down

# bind C-p run "tmux set-buffer \"$(xsel -o -b)\"; tmux paste-buffer"
# bind C-y run "tmux save-buffer - | xsel -i -b"

# tmux plugin manager
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run '~/.tmux/plugins/tpm/tpm'
