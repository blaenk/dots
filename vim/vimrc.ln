set encoding=utf-8

if has('win32')
  set rtp+=~/.vim
endif

colorscheme solarized
set background=light
syntax on

" awesome trick by github.com/rson
if !isdirectory(expand("~/.vim/bundle/vundle/.git"))
  !git clone https://github.com/gmarik/vundle ~/.vim/bundle/vundle
endif

source ~/.vim/conf/bundles.vim

let mapleader = ","

nmap <silent> <leader>s :set spell!<CR>
nnoremap <silent> <C-l> :noh<CR><C-l>

" tab navigation
nnoremap <M-h> gT
nnoremap <M-l> gt

nnoremap <silent> <M-j> :execute "tabmove" tabpagenr() - 2 <CR>
nnoremap <silent> <M-k> :execute "tabmove" tabpagenr() <CR>

" meta key copying like in map
nnoremap <M-c> y
nnoremap <M-v> p

vnoremap <M-c> y
vnoremap <M-v> p

imap <M-v> <C-r>+

" general system specific configurations
if has('unix') && 'Darwin' != system('echo -n "$(uname)"')
  " linux
  if $COLORTERM == 'gnome-terminal'
    set t_Co=256
  endif

  set guifont=DejaVu\ Sans\ Mono\ for\ Powerline\ 10

  " make the default clipboard be X11's
  set clipboard=unnamedplus
elseif has('unix') && 'Darwin' == system('echo -n "$(uname)"')
  " mac
  set gfn=Menlo\ for\ Powerline:h12
  " this doesn't work in mountain lion's default vim (does on macvim)
  set clipboard=unnamed
elseif !has('unix')
  " windows
  set gfn=Consolas\ for\ Powerline\ FixedD:h10
  set clipboard=unnamed
endif

let g:Powerline_symbols = 'fancy'

let g:pandoc_no_folding = 1

let g:ctrlp_map = '<leader>f'
let g:ctrlp_custom_ignore = {
  \ 'dir': '\v[\/]\.(git|hg|svn)$',
  \ 'file': '\v\.(DS_Store)$',
  \ }
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_open_new_file = 't'
let g:ctrlp_open_multiple_files = '1t'
let g:ctrlp_prompt_mappings = {
  \ 'AcceptSelection("e")': ['<c-t>'],
  \ 'AcceptSelection("t")': ['<cr>']
  \ }

"let g:ctrlp_working_path_mode = 1 set working dir to parent dir of cur file
map <leader>b :CtrlPBuffer<cr>

" objective-c
let g:alternateExtensions_m = "h"
let g:alternateExtensions_h = "m"

let g:gist_detect_filetype = 1
let g:gist_open_browser_after_post = 1

set pastetoggle=<M-p>
set backspace=indent,eol,start
set backup
set backupdir=~/.vim/backups
set directory=~/.vim/tmp
set undodir=~/.vim/undo
set tags=./tags;
let g:easytags_dynamic_files = 1
"let g:easytags_file = '~/.vim/tags'

cmap w!! %!sudo tee > /dev/null %

map <Leader>o o<Esc>ko
set laststatus=2
set tabstop=2
set shiftwidth=2
set expandtab
set softtabstop=2
set autoindent
set gcr+=a:blinkon0
set undofile

filetype plugin indent on
au BufRead,BufNewFile *.json set filetype=javascript

set wildmenu
set wildmode=list:longest

set showmode
set showcmd
set hidden
set visualbell
set cursorline
set ttyfast
set ruler
set relativenumber
set number

"nnoremap / /\v
"vnoremap / /\v
set ignorecase
set smartcase
set incsearch
set showmatch
set hlsearch
set splitright

set wrap
set list
set listchars=tab:▸\ ,eol:¬

nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>

inoremap <F1> <ESC>
nnoremap <F1> <ESC>
vnoremap <F1> <ESC>

nnoremap ; :

nnoremap <leader>a :Ack 

inoremap jj <ESC>

nnoremap <silent> <leader>p :set rnu! list! number!<CR>
nnoremap <silent> <leader>r :set relativenumber!<CR>
nmap <leader>h <Plug>HexHighlightToggle

map <F10> :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'
  \ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"
  \ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"<CR>

function! SyntaxItem()
  return synIDattr(synID(line("."),col("."),1),"name")
endfunction
